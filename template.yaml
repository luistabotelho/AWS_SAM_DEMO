AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  aws-sam-demo

  Simple Demo of AWS SAM. 
  Can receive data and put that data into S3 while logging an event to DynamoDB.
  Can retrieve the processed data once available.
  
Globals:
  Function:
    Timeout: 30
    Runtime: nodejs20.x
    Architectures:
      - x86_64

Resources:
  ##########################################
  ReceiveEventFunction:
    Type: AWS::Serverless::Function 
    Connectors:
      EventTableConn:
        Properties:
          Destination:
            Id: EventTable
          Permissions:
            - Read
            - Write
    Properties:
      Handler: handlers/receive-event.handler
      MemorySize: 512
      Policies:
        - S3CrudPolicy:
            BucketName: aws-sam-demo-data-bucket
      Events:
        ApiEvent:
          Type: Api 
          Properties:
            Path: /receive-event
            Method: post
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "ES2022"
        Sourcemap: true
        EntryPoints: 
        - handlers/receive-event.ts
  ##########################################
  FetchReceivedFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/fetch-received.handler
      MemorySize: 512
      Policies:
        - S3CrudPolicy:
            BucketName: aws-sam-demo-data-bucket
      Events:
        ApiEvent:
          Type: Api 
          Properties:
            Path: /fetch-received
            Method: get
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "ES2022"
        Sourcemap: true
        EntryPoints: 
        - handlers/fetch-received.ts
  ##########################################
  FetchResultFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/fetch-result.handler
      MemorySize: 512
      Policies:
        - S3CrudPolicy:
            BucketName: aws-sam-demo-data-bucket
      Events:
        ApiEvent:
          Type: Api 
          Properties:
            Path: /fetch-result
            Method: get
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "ES2022"
        Sourcemap: true
        EntryPoints: 
        - handlers/fetch-result.ts
  ##########################################
  ProcessFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/process.handler
      MemorySize: 512
      Policies:
        - S3CrudPolicy:
            BucketName: aws-sam-demo-data-bucket
      Events:
        S3Event:
          Type: S3 
          Properties:
            Bucket: !Ref DataBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: Received/
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "ES2022"
        Sourcemap: true
        EntryPoints: 
        - handlers/process.ts
  #########################################
  DataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: aws-sam-demo-data-bucket
      PublicAccessBlockConfiguration:
          BlockPublicAcls: True
          BlockPublicPolicy: True
          IgnorePublicAcls: True
          RestrictPublicBuckets: True
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              SSEAlgorithm: 'aws:kms'
  #########################################
  EventTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PointInTimeRecoverySpecification: 
        PointInTimeRecoveryEnabled: false
      PrimaryKey: 
        Name: PK
        Type: String
      SSESpecification: 
        SSEEnabled: true
      TableName: Events

Outputs:
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
